name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  GITHUB_WORKFLOW: dati-semantic-lodview
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11]
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
      - name: caching
        uses: actions/cache@v1
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-pom-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-pom-
      - name: Create Build Artifact
        run: mvn --batch-mode package
  owasp:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
      - name: Dependency Check
        run:  mvn org.owasp:dependency-check-maven:check
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker-security
        uses: instrumenta/conftest-action@master
        with:
          files: Dockerfile
          policy: dockerfile-security.rego
  publish:
    needs:
      - security
      - build
      - owasp
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Github Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]${GITHUB_REF##*/}"
        id: extract_branch
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            maintainer=Team Digitale
            org.opencontainers.image.source.branch=${{ steps.extract_branch.outputs.branch }}
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}-${{github.run_number}}-{{sha}}
            type=raw, value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  # This job triggers the update-config.yaml workflow on
  #   the dati-semantic-kubernetes repository.
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    needs:
      - publish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: build image
        id: extractImage
        run: |
          IMAGE="$REGISTRY/$IMAGE_NAME"
          TAG="$(date +'%Y%m%d')-${{github.run_number}}-$(git rev-parse --short HEAD)"
          echo "##[set-output name=imageName;]${IMAGE}:${TAG}"
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: teamdigitale
          repo: dati-semantic-kubernetes
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          workflow_file_name: update-config.yaml
          ref: dev
          wait_interval: 20
          inputs: '{"serviceName": "dati-semantic-lodview", "imageWithNewTag": "${{ steps.extractImage.outputs.imageName }}"}'